'use strict';

require('./chunk-AQ674A4M.cjs');
var jsxDevRuntime = require('react/jsx-dev-runtime');

/**
 * @license bippy
 *
 * Copyright (c) Aiden Bai, Million Software, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var jsxDEV = (type, originalProps, key, isStatic, source, self) => {
  let props = originalProps;
  try {
    if (originalProps && typeof originalProps === "object" && source && String(type) !== "Symbol(react.fragment)") {
      if (typeof type === "string") {
        const proto = Object.getPrototypeOf(originalProps);
        const descriptors = Object.getOwnPropertyDescriptors(originalProps);
        descriptors.__source = {
          value: source,
          enumerable: false,
          configurable: true,
          writable: true
        };
        props = Object.create(proto, descriptors);
      } else {
        props.__source = source;
      }
    }
  } catch {
  }
  return jsxDevRuntime.jsxDEV(type, props, key, isStatic, source, self);
};

Object.defineProperty(exports, "Fragment", {
  enumerable: true,
  get: function () { return jsxDevRuntime.Fragment; }
});
exports.jsxDEV = jsxDEV;
Object.keys(jsxDevRuntime).forEach(function (k) {
  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () { return jsxDevRuntime[k]; }
  });
});
